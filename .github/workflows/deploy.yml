name: Deploy React Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: docker build -t hackyeah_frontend:latest .

    - name: Save Docker image to a file
      run: docker save hackyeah_frontend:latest | gzip > hackyeah_frontend_latest.tar.gz

    - name: Upload Docker image to server
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        source: "hackyeah_frontend_latest.tar.gz"
        target: "${{ secrets.REMOTE_PATH }}/hackyeah_frontend_latest.tar.gz"

    - name: Load and run Docker image on server
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
        REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
      run: |
        # Load the Docker image on the server
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST "sudo docker load -i ${REMOTE_PATH}/hackyeah_frontend_latest.tar.gz/hackyeah_frontend_latest.tar.gz"

        # Stop and remove the existing container
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST "sudo docker rm -f hackyeah_frontend 2>/dev/null || true"

        # Run the new container with SSH port exposed
        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST "sudo docker run -d --name hackyeah_frontend --restart=always -p 81:4173 hackyeah_frontend:latest"